"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RedstoneGatewayContractDefinitionLoader = void 0;
const _smartweave_1 = require("../../..");
const ContractDefinitionLoader_1 = require("./ContractDefinitionLoader");
require("redstone-isomorphic");
/**
 * An extension to {@link ContractDefinitionLoader} that makes use of
 * Redstone Gateway ({@link https://github.com/redstone-finance/redstone-sw-gateway})
 * to load Contract Data.
 *
 * If the contract data is not available on RedStone Gateway - it fallbacks to default implementation
 * in {@link ContractDefinitionLoader} - i.e. loads the definition from Arweave gateway.
 */
class RedstoneGatewayContractDefinitionLoader extends ContractDefinitionLoader_1.ContractDefinitionLoader {
    constructor(baseUrl, arweave, cache) {
        super(arweave, cache);
        this.baseUrl = baseUrl;
        this.rLogger = _smartweave_1.LoggerFactory.INST.create('RedstoneGatewayContractDefinitionLoader');
        this.baseUrl = (0, _smartweave_1.stripTrailingSlash)(baseUrl);
    }
    async doLoad(contractTxId, forcedSrcTxId) {
        if (forcedSrcTxId) {
            // no support for the evolve yet..
            return await super.doLoad(contractTxId, forcedSrcTxId);
        }
        try {
            return await fetch(`${this.baseUrl}/gateway/contracts/${contractTxId}`)
                .then((res) => {
                return res.ok ? res.json() : Promise.reject(res);
            })
                .catch((error) => {
                var _a;
                if ((_a = error.body) === null || _a === void 0 ? void 0 : _a.message) {
                    this.rLogger.error(error.body.message);
                }
                throw new Error(`Unable to retrieve contract data. Redstone gateway responded with status ${error.status}.`);
            });
        }
        catch (e) {
            this.rLogger.warn('Falling back to default contracts loader');
            return await super.doLoad(contractTxId, forcedSrcTxId);
        }
    }
}
exports.RedstoneGatewayContractDefinitionLoader = RedstoneGatewayContractDefinitionLoader;
//# sourceMappingURL=RedstoneGatewayContractDefinitionLoader.js.map